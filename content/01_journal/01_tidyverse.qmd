---
title: "Superviced ML Challenge"
author: "Alexander Thiel"
---

::: callout-note
Code is unfortunately not fully functioning. Errors present when comparing the predicted data to the testing dataset.
:::

```{r, eval = FALSE, echo = T}



library(tidymodels)
library(tidyverse)
# Modeling
library(parsnip)

# Preprocessing & Sampling
library(recipes)
library(rsample)
# Modeling Error Metrics
library(yardstick)

# Plotting Decision Trees
library(rpart)

# 1.0 Data Import and Preparation ----

bike_features_tbl <- readRDS("Data/bike_features_tbl.rds")

bike_features_tbl %>% distinct(category_2)

bike_features_tbl <- bike_features_tbl %>%
  select(model:url, `Rear Derailleur`, `Shift Lever`)%>%
  mutate(id = row_number())


# 2.0 Model Building ----

lm_mod <- linear_reg() %>% 
  set_engine("lm")

# 3.0 Create Features with Recipes package ----

set.seed(seed = 105)
split_obj <- rsample::initial_split(bike_features_tbl, prop   = 0.80, strata = "category_2")

# Check if testing contains all category_2 values
split_obj %>% training() %>% distinct(category_2)
split_obj %>% testing() %>% distinct(category_2)

#training set contains all category_2 values that appear in testing

# Assign training and test data
train_tbl <- training(split_obj)
test_tbl  <- testing(split_obj)

rec <- 
  recipe(price ~.,data = train_tbl) %>%
  step_rm(url)%>%
  update_role(id, new_role = "ID")%>%
  #update_role(price, new_role = "outcome")%>%
  step_dummy("Rear Derailleur")%>%
  step_dummy("Shift Lever")%>%
  step_zv(all_predictors())
  #step_discretize(price)
  #prep()
rec


#train_transformed_tbl <- bake(rec,train_tbl)
#test_transformed_tbl <- bake(rec,test_tbl)

# 4.0 Bundle Recipe with worflow ----


bikes_wflow <- 
  workflow() %>% 
  add_model(lm_mod) %>% 
  add_recipe(rec)
bikes_wflow

bikes_fit <- 
  bikes_wflow %>%
  fit(data = train_tbl)

#predict(bikes_fit, test_tbl)

# 5.0 Evaluate with yardstick package ----

predict(bikes_fit, test_tbl)


testing<- 
  predict(bikes_fit, test_tbl, type = "class") %>%
  bind_cols(test_tbl %>% select(price,model,model_year)) %>% 

#testing %>%                   # test set predictions
  roc_auc(truth = price, .pred)


yardstick::metrics(truth = price, estimate = .pred)
```
