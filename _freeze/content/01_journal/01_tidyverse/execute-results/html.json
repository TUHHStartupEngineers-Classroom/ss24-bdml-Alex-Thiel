{
  "hash": "770376685a64cc5027f33ce10be9e8fb",
  "result": {
    "markdown": "---\ntitle: \"Superviced ML Challenge\"\nauthor: \"Alexander Thiel\"\n---\n\n\n::: callout-note\nCode is unfortunately not fully functioning. Errors present when comparing the predicted data to the testing dataset.\n:::\n\n\n::: {.cell hash='01_tidyverse_cache/html/unnamed-chunk-1_4ba1a95e290b3008d1ce83e63f317d1b'}\n\n```{.r .cell-code}\nlibrary(tidymodels)\nlibrary(tidyverse)\n# Modeling\nlibrary(parsnip)\n\n# Preprocessing & Sampling\nlibrary(recipes)\nlibrary(rsample)\n# Modeling Error Metrics\nlibrary(yardstick)\n\n# Plotting Decision Trees\nlibrary(rpart)\n\n# 1.0 Data Import and Preparation ----\n\nbike_features_tbl <- readRDS(\"Data/bike_features_tbl.rds\")\n\nbike_features_tbl %>% distinct(category_2)\n\nbike_features_tbl <- bike_features_tbl %>%\n  select(model:url, `Rear Derailleur`, `Shift Lever`)%>%\n  mutate(id = row_number())\n\n\n# 2.0 Model Building ----\n\nlm_mod <- linear_reg() %>% \n  set_engine(\"lm\")\n\n# 3.0 Create Features with Recipes package ----\n\nset.seed(seed = 105)\nsplit_obj <- rsample::initial_split(bike_features_tbl, prop   = 0.80, strata = \"category_2\")\n\n# Check if testing contains all category_2 values\nsplit_obj %>% training() %>% distinct(category_2)\nsplit_obj %>% testing() %>% distinct(category_2)\n\n#training set contains all category_2 values that appear in testing\n\n# Assign training and test data\ntrain_tbl <- training(split_obj)\ntest_tbl  <- testing(split_obj)\n\nrec <- \n  recipe(price ~.,data = train_tbl) %>%\n  step_rm(url)%>%\n  update_role(id, new_role = \"ID\")%>%\n  #update_role(price, new_role = \"outcome\")%>%\n  step_dummy(\"Rear Derailleur\")%>%\n  step_dummy(\"Shift Lever\")%>%\n  step_zv(all_predictors())\n  #step_discretize(price)\n  #prep()\nrec\n\n\n#train_transformed_tbl <- bake(rec,train_tbl)\n#test_transformed_tbl <- bake(rec,test_tbl)\n\n# 4.0 Bundle Recipe with worflow ----\n\n\nbikes_wflow <- \n  workflow() %>% \n  add_model(lm_mod) %>% \n  add_recipe(rec)\nbikes_wflow\n\nbikes_fit <- \n  bikes_wflow %>%\n  fit(data = train_tbl)\n\n#predict(bikes_fit, test_tbl)\n\n# 5.0 Evaluate with yardstick package ----\n\npredict(bikes_fit, test_tbl)\n\n\ntesting<- \n  predict(bikes_fit, test_tbl, type = \"class\") %>%\n  bind_cols(test_tbl %>% select(price,model,model_year)) %>% \n\n#testing %>%                   # test set predictions\n  roc_auc(truth = price, .pred)\n\n\nyardstick::metrics(truth = price, estimate = .pred)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}